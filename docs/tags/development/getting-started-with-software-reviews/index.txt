1:"$Sreact.fragment"
2:I[2971,["/_next/static/chunks/ae2273c76f546f10.js"],"Header"]
3:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"default"]
4:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"default"]
5:I[29306,["/_next/static/chunks/ae2273c76f546f10.js","/_next/static/chunks/4703bc040350e6fb.js"],"default"]
6:I[22016,["/_next/static/chunks/ae2273c76f546f10.js"],"default"]
7:I[79520,["/_next/static/chunks/ae2273c76f546f10.js"],""]
9:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"OutletBoundary"]
b:I[11533,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"AsyncMetadataOutlet"]
10:I[68027,["/_next/static/chunks/ae2273c76f546f10.js"],"default"]
:HL["/_next/static/chunks/cc0df02d4327479b.css","style"]
:HL["/_next/static/chunks/eb89a7503d7ea580.css","style"]
:HL["/_next/static/media/asap_condensed_v17_latin_500-s.p.201eb6cb.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/ibm_plex_serif_v19_latin_500-s.p.0a408628.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/roboto_condensed_v27_latin_500-s.p.fa484095.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/satisfy_v21_latin_regular-s.p.947b27dc.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
0:{"P":null,"b":"kJIvsIcygUwkht8OuZseX","p":"","c":["","tags","development","getting-started-with-software-reviews",""],"i":false,"f":[[["",{"children":["tags",{"children":[["tag","development","d"],{"children":[["slug","getting-started-with-software-reviews","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/cc0df02d4327479b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/chunks/eb89a7503d7ea580.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/ae2273c76f546f10.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"data-scroll-behavior":"smooth","lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"color-scheme","content":"light dark"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              (function() {\n                try {\n                  var theme = localStorage.getItem(\"theme\");\n                  var dark = theme === \"dark\" || (theme === \"system\" && window.matchMedia(\"(prefers-color-scheme: dark)\").matches);\n                  if (dark) {\n                    document.documentElement.classList.add(\"dark\");\n                    document.documentElement.setAttribute(\"data-theme\", \"dark\");\n                    document.documentElement.style.colorScheme = \"dark\";\n                  } else {\n                    document.documentElement.classList.remove(\"dark\");\n                    document.documentElement.setAttribute(\"data-theme\", \"light\");\n                    document.documentElement.style.colorScheme = \"light\";\n                  }\n                } catch(e) {}\n              })();\n            "}}]]}],["$","body",null,{"children":[["$","$L2",null,{}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L5",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"brand-bg brand-text sticky bottom-0 flex p-1","children":["$","div",null,{"className":"brand-page-max-width m-auto flex w-full flex-row justify-between px-4","children":[["$","div",null,{"className":"robotocond500_1477471c-module__3nXAyW__className","children":["¬© ",2025," Steve Teleki. All rights reserved."]}],["$","div",null,{"className":"privacy-footer","children":["$","$L6",null,{"href":"/articles/privacy-policy","children":["$","span",null,{"className":"robotocond500_1477471c-module__3nXAyW__className","children":"Privacy Policy"}]}]}]]}]}],["$","dialog",null,{"id":"search_modal","className":"modal","children":[["$","div",null,{"className":"modal-box w-11/12 max-w-5xl","children":[["$","h3",null,{"className":"pb-6 text-lg font-bold","children":"üß≠¬†Steve on Software Site Search"}],["$","div",null,{"id":"search","className":""}],["$","form",null,{"method":"dialog","children":["$","button",null,{"className":"btn btn-circle btn-ghost btn-sm absolute top-2 right-2","children":"‚úñÔ∏è"}]}]]}],["$","form",null,{"method":"dialog","className":"modal-backdrop","children":["$","button",null,{"children":"close"}]}]]}]]}],["$","$L7",null,{"src":"/js/nav.js"}],["$","$L7",null,{"src":"/js/katex.min.js"}],["$","$L7",null,{"src":"/pagefind/pagefind-ui.js"}],["$","$L7",null,{"src":"/js/pagefind-extra.js"}]]}]]}],{"children":["tags",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["tag","development","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","getting-started-with-software-reviews","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L8",null,["$","$L9",null,{"children":["$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$Ld","$Le"],"$Lf"]}],false]],"m":"$undefined","G":["$10",["$L11","$L12"]],"s":false,"S":true}
13:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"ViewportBoundary"]
15:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"MetadataBoundary"]
16:"$Sreact.suspense"
d:["$","$L13",null,{"children":"$L14"}]
e:["$","meta",null,{"name":"next-size-adjust","content":""}]
f:["$","$L15",null,{"children":["$","div",null,{"hidden":true,"children":["$","$16",null,{"fallback":null,"children":"$L17"}]}]}]
11:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/cc0df02d4327479b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
12:["$","link","1",{"rel":"stylesheet","href":"/_next/static/chunks/eb89a7503d7ea580.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
18:T4440,
<ol>
  <li>The <strong>purpose</strong> of the design and code reviews is <strong>to find defects</strong>.</li>
  <li>The factor that most influences the length of a design or code review is the <strong>amount of work product</strong> that has to be reviewed. This may be pages of design or lines of code of source.</li>
  <li><strong>Checklist-directed reviews</strong> are the most effective at finding defects specific to the project and product. The checklist has to be built from past defects that the person or team had problems with most recently.</li>
</ol>
<h2>Starting a Review Practice in a Team</h2>
<p>Checklist-directed reviews have a 70% to 90% yield in finding defects. The yield is defined as the percentage of defects found by the review that existed in the work product on entry into the review. When a team starts a review practice, there is no checklist yet. How can a Team get started? Here are some tips to get the reviews going.</p>
<h3>What parts of the system to target for a review?</h3>
<ol>
  <li>Create on a large piece of paper, or on a whiteboard, a map of the system that the team is working on.
    <ol>
      <li>This map must include at least all the physical modules of the system, but going to a finer level of detail is better.</li>
      <li>Each system part drawn should represent around 2 KLOC of NCSS (KLOC=thousand lines of code, NCSS=Non Comment Source Statement).</li>
    </ol>
  </li>
  <li>Review the defect log.
    <ol>
      <li>From the defect log select the most recent list of 100 defects (or whatever you have in the last month).</li>
    </ol>
  </li>
  <li>Place a mark by each system part for each defect that can be traced to that part.</li>
</ol>
<p>The system part with the most marks gets to be the target of the investigation.</p>
<p>If after a cursory assessment it seems that finding and fixing all the defects in the part would take longer then rewriting it, then the team should choose the rewrite route.</p>
<h3>How much code can you review?</h3>
<p>The speed of the review seems to be constant on all projects. Ranges from about 200 to 300 NCSS per hour. Reviewing at higher speeds will make the reviewers miss what they are looking for.</p>
<h3>What is the difference between a review and defect finding?</h3>
<p>During the review the reviewer is looking at the source code, and when he/she notices a defect he is looking at it right then and there. There is no more detection needed. On the other hand, when the developer has to investigate a defect that is reported by a Customer, then first the reason for the defect must be established. This is a time consuming activity because it contains a great deal of uncertainty.</p>
<h3>What to look for in a review?</h3>
<p>It is best to look for defects that had been observed already. Chances are that the defects that were noted in some part of the system, are present in some other part of the system as well (especially if they both have just been worked on).</p>
<h2>Types of Reviews</h2>
<ol>
  <li>Personal Review</li>
  <li>Peer Review</li>
  <li>Inspection</li>
  <li>Walkthrough</li>
</ol>
<h2>Review Principles</h2>
<h3>Personal reviews follow a process with</h3>
<ul>
  <li>entry and exit criteria</li>
  <li>a defined review structure</li>
  <li>guidelines, checklists, and standards</li>
</ul>
<p>The personal review goal is to find every defect before the first unit test. To address this goal:</p>
<ul>
  <li>use coding standards</li>
  <li>use design completeness criteria</li>
  <li>measure and improve your review process</li>
</ul>
<h3>Design Review Principles</h3>
<ol>
  <li>Produce designs that can be reviewed.</li>
  <li>Follow an explicit review strategy.</li>
  <li>Review the design in stages.</li>
  <li>Verify that the logic correctly implements the requirements.</li>
</ol>
<h3>What is a Reviewable Design?</h3>
<p>A reviewable design has:</p>
<ol>
  <li>defined context</li>
  <li>precise representation</li>
  <li>consistent and clear structure</li>
</ol>
<p>This suggests that:</p>
<ol>
  <li>the design‚Äôs purpose and function is explicitly stated</li>
  <li>you have criteria for design completeness</li>
  <li>the design is explicitly structured in logical elements</li>
</ol>
<h2>Checklists</h2>
<h3>Checklists: The Theory</h3>
<ol>
  <li>When performing precise tasks, it is difficult to do more than one thing well at a time.</li>
  <li>The checklist defines the review steps in the suggested order for performing them.</li>
  <li>By checking off each item, you are more likely to perform it properly.</li>
  <li>Establish a personal checklist that is customized to your defect experience.</li>
  <li>Process yield is the percentage of defects found before the first unit test execution. (70%+)</li>
</ol>
<h3>Checklists: HOWTO</h3>
<ol>
  <li>Use your review strategy.</li>
  <li>Review one product component at a time.</li>
  <li>Check for one type of defect at a time.</li>
</ol>
<h3>Checklists: The Key Point</h3>
<p><strong>Treat each check as a personal certification that the product is free of this defect.</strong></p>
<h2>For Extra Credit: Estimating Remaining Defects After a Peer Review</h2>
<p>Use the Capture-Recapture Method:</p>
<ul>
  <li>A: The number of defects found by the first reviewer.</li>
  <li>B: The number of defects found by the second reviewer.</li>
  <li>C: The number of defect found by both the first and the second reviewer.</li>
</ul>
<p>Estimated total number of defects in the product: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML">
        <semantics>
          <mrow>
            <mtext>¬†</mtext>
            <mi>E</mi>
            <mo>=</mo>
            <mfrac>
              <mrow>
                <mi>A</mi>
                <mo>‚àó</mo>
                <mi>B</mi>
              </mrow>
              <mi>C</mi>
            </mfrac>
          </mrow>
          <annotation encoding="application/x-tex">\ E = \frac{A \ast B}{C}</annotation>
        </semantics>
      </math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mspace">¬†</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mbin mtight">‚àó</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">‚Äã</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>Total defects found so far: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML">
        <semantics>
          <mrow>
            <mtext>¬†</mtext>
            <mi>D</mi>
            <mo>=</mo>
            <mi>A</mi>
            <mo>+</mo>
            <mi>B</mi>
            <mo>‚àí</mo>
            <mi>C</mi>
          </mrow>
          <annotation encoding="application/x-tex">\ D = A + B - C </annotation>
        </semantics>
      </math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mspace">¬†</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">‚àí</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span><br>Estimated remaining defects in the product: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML">
        <semantics>
          <mrow>
            <mtext>¬†</mtext>
            <mi>R</mi>
            <mo>=</mo>
            <mi>E</mi>
            <mo>‚àí</mo>
            <mi>D</mi>
            <mo>=</mo>
            <mfrac>
              <mrow>
                <mi>A</mi>
                <mo>‚àó</mo>
                <mi>B</mi>
              </mrow>
              <mi>C</mi>
            </mfrac>
            <mo>‚àí</mo>
            <mo stretchy="false">(</mo>
            <mi>A</mi>
            <mo>+</mo>
            <mi>B</mi>
            <mo>‚àí</mo>
            <mi>C</mi>
            <mo stretchy="false">)</mo>
          </mrow>
          <annotation encoding="application/x-tex">\ R = E - D = \frac{A \ast B}{C} - (A + B - C)</annotation>
        </semantics>
      </math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mspace">¬†</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">‚àí</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mbin mtight">‚àó</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">‚Äã</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">‚àí</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">‚àí</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span><br>Inspection Yield: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML">
        <semantics>
          <mrow>
            <mtext>¬†</mtext>
            <mi>Y</mi>
            <mo>=</mo>
            <mfrac>
              <mi>D</mi>
              <mi>E</mi>
            </mfrac>
            <mo>‚àó</mo>
            <mn>100</mn>
          </mrow>
          <annotation encoding="application/x-tex">\ Y = \frac{D}{E} \ast 100 </annotation>
        </semantics>
      </math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mspace">¬†</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">‚Äã</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">‚àó</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span></p>
<h2>HOWTO Quick Summary</h2>
<ol>
  <li>Pick a piece of code that you are uneasy about.</li>
  <li>Review it for defects that you had recently. KEEP A LIST!</li>
  <li>Keep your review speed at 200 LOC/hr. Plan ahead!</li>
  <li>Only look for one defect at a time.</li>
  <li>Treat each check as a personal certification that the product is free of this defect.</li>
</ol>
<h2>See Also</h2>
<h3>Guiding Principles for Reviews from Wiegers</h3>
<ol>
  <li>Check your egos at the door (Weinberg)</li>
  <li>Keep the review team small.</li>
  <li>Find problems during reviews, but don't try to solve them.</li>
  <li>Limit review meetings to about two hours.</li>
  <li>Review only about 200 to 400 NCSS per hour.</li>
  <li>Start the reviews where the perceived pain is the greatest.</li>
  <li><em>"It is only a mistake if it gets out of the review."</em></li>
  <li>"Avoid using technical reviewers who are themselves 'above' review."</li>
</ol>
<h2>References</h2>
<ol>
  <li><a href="http://www.amazon.com/exec/obidos/ASIN/0201734850/ref=psengnet-20/">Peer Reviews in Software</a>, by Karl Wiegers</li>
  <li><a href="http://www.amazon.com/exec/obidos/ASIN/020147719X/ref=psengnet-20/">Introduction to the Team Software Process</a>, by Watts Humphrey</li>
  <li><a href="http://www.processimpact.com/articles/two_eyes.html">When two eyes aren't enough</a>, by Karl Wiegers</li>
  <li><a href="http://www.processimpact.com/articles/seven_truths.html">Seven Thruths About Peer Reviews</a>, by Karl Wiegers</li>
  <li><a href="http://www.processimpact.com/articles/revu_sins.html">Seven Deadly Sins of Software Reviews</a>, by Karl Wiegers</li>
  <li><a href="http://www.amazon.com/exec/obidos/ASIN/0932633196/ref=psengnet-20/">Handbook of Walkthroughs, Inspections and Technical Reviews</a>, by Freedman and Weinberg</li>
</ol>
8:["$","main",null,{"children":[["$","article",null,{"id":"article","className":"content-page grid grid-cols-1 self-center","children":[["$","div",null,{"className":"content-prose","children":["$","h1",null,{"className":"","children":"Getting Started with Software Reviews"}]}],["$","div",null,{"className":"content-subtitle","children":""}],["$","div",null,{"className":"content-date-tags","children":["$","div",null,{"className":"brand-text-accent my-2 text-sm","children":["üóìÔ∏è",["$","span",null,{"className":"date-short px-1","children":"Feb 9, 2006"}],["$","span",null,{"className":"date-long px-1","children":"February 9, 2006"}],[["$","span",null,{"className":"pr-2"}],[["$","span","Development",{"children":["$","span",null,{"className":"inline whitespace-nowrap pr-2 leading-loose","children":["$","$L6",null,{"href":"/tags/development","children":["üè∑Ô∏è ","Development"]}]}]}],["$","span","Process",{"children":["$","span",null,{"className":"inline whitespace-nowrap pr-2 leading-loose","children":["$","$L6",null,{"href":"/tags/process","children":["üè∑Ô∏è ","Process"]}]}]}],["$","span","Review",{"children":["$","span",null,{"className":"inline whitespace-nowrap pr-2 leading-loose","children":["$","$L6",null,{"href":"/tags/review","children":["üè∑Ô∏è ","Review"]}]}]}]]]]}]}],["$","div",null,{"className":"content-reading-time","children":"üìñ 5 minute read"}],["$","div",null,{"className":"content-prose pt-4","dangerouslySetInnerHTML":{"__html":"$18"}}]]}],"$L19"]}]
19:["$","div",null,{"className":"pager","children":[["$","div",null,{"className":"pager-btn pager-btn-left justify-self-start","children":["$","$L6",null,{"href":"/tags/development/guildelines-for-detailed-planning","children":["$","div",null,{"className":"flex flex-row gap-2","children":[["$","div",null,{"className":"self-center","children":"‚Äπ‚Äπ"}],["$","div",null,{"className":"link-long","children":"Guildelines for Detailed Planning"}]]}]}]}],["$","div",null,{"className":"pager-btn pager-btn-right justify-self-end","children":["$","$L6",null,{"href":"/tags/development/peter-drucker-on-software-management","children":["$","div",null,{"className":"flex flex-row gap-2","children":[["$","div",null,{"className":"link-long","children":"Peter Drucker on Software Management"}],["$","div",null,{"className":"self-center","children":"‚Ä∫‚Ä∫"}]]}]}]}]]}]
14:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:null
1a:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"IconMark"]
c:{"metadata":[["$","title","0",{"children":"Steve on Software"}],["$","meta","1",{"name":"description","content":"Steve on software development, management, people, technology, organizations, and business."}],["$","meta","2",{"name":"application-name","content":"Steve on Software"}],["$","meta","3",{"name":"author","content":"Steve Teleki"}],["$","meta","4",{"name":"generator","content":"Next.js+Unified.js"}],["$","meta","5",{"name":"keywords","content":"development,management,people,technology,software,organizations,software business"}],["$","meta","6",{"name":"referrer","content":"origin-when-cross-origin"}],["$","meta","7",{"name":"creator","content":"Steve Teleki"}],["$","meta","8",{"name":"publisher","content":"Steve Teleki"}],["$","meta","9",{"name":"robots","content":"index, follow, nocache"}],["$","meta","10",{"name":"category","content":"technology"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"Steve on Software"}],["$","meta","13",{"property":"og:description","content":"Steve on software development, management, people, technology, organizations, and business."}],["$","meta","14",{"property":"og:url","content":"https://steve.teleki.net/"}],["$","meta","15",{"property":"og:site_name","content":"Steve on Software"}],["$","meta","16",{"property":"og:locale","content":"en_US"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary"}],["$","meta","19",{"name":"twitter:title","content":"Steve on Software"}],["$","meta","20",{"name":"twitter:description","content":"Steve on software development, management, people, technology, organizations, and business."}],["$","link","21",{"rel":"icon","href":"/favicon.ico?favicon.b28d3dba.ico","sizes":"256x256","type":"image/x-icon"}],["$","link","22",{"rel":"icon","href":"/icon.png?icon.5872d748.png","sizes":"180x180","type":"image/png"}],["$","link","23",{"rel":"apple-touch-icon","href":"/apple-icon.png?apple-icon.5872d748.png","sizes":"180x180","type":"image/png"}],["$","$L1a","24",{}]],"error":null,"digest":"$undefined"}
17:"$c:metadata"

1:"$Sreact.fragment"
2:I[2971,["/_next/static/chunks/ae2273c76f546f10.js"],"Header"]
3:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"default"]
4:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"default"]
5:I[29306,["/_next/static/chunks/ae2273c76f546f10.js","/_next/static/chunks/4703bc040350e6fb.js"],"default"]
6:I[22016,["/_next/static/chunks/ae2273c76f546f10.js"],"default"]
7:I[79520,["/_next/static/chunks/ae2273c76f546f10.js"],""]
9:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"OutletBoundary"]
b:I[11533,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"AsyncMetadataOutlet"]
d:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"ViewportBoundary"]
f:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"MetadataBoundary"]
10:"$Sreact.suspense"
12:I[68027,["/_next/static/chunks/ae2273c76f546f10.js"],"default"]
:HL["/_next/static/chunks/cc0df02d4327479b.css","style"]
:HL["/_next/static/chunks/eb89a7503d7ea580.css","style"]
:HL["/_next/static/media/asap_condensed_v17_latin_500-s.p.201eb6cb.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/ibm_plex_serif_v19_latin_500-s.p.0a408628.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/roboto_condensed_v27_latin_500-s.p.fa484095.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/satisfy_v21_latin_regular-s.p.947b27dc.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
0:{"P":null,"b":"_8eaeoBrSb0hLrL10hi58","p":"","c":["","articles","software-engineering-essentials-for-the-working-software-developer",""],"i":false,"f":[[["",{"children":["articles",{"children":[["slug","software-engineering-essentials-for-the-working-software-developer","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/cc0df02d4327479b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/chunks/eb89a7503d7ea580.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/ae2273c76f546f10.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"data-scroll-behavior":"smooth","lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"color-scheme","content":"light dark"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              (function() {\n                try {\n                  var theme = localStorage.getItem(\"theme\");\n                  var dark = theme === \"dark\" || (theme === \"system\" && window.matchMedia(\"(prefers-color-scheme: dark)\").matches);\n                  if (dark) {\n                    document.documentElement.classList.add(\"dark\");\n                    document.documentElement.setAttribute(\"data-theme\", \"dark\");\n                    document.documentElement.style.colorScheme = \"dark\";\n                  } else {\n                    document.documentElement.classList.remove(\"dark\");\n                    document.documentElement.setAttribute(\"data-theme\", \"light\");\n                    document.documentElement.style.colorScheme = \"light\";\n                  }\n                } catch(e) {}\n              })();\n            "}}]]}],["$","body",null,{"children":[["$","$L2",null,{}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L5",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"brand-bg brand-text sticky bottom-0 flex p-1","children":["$","div",null,{"className":"brand-page-max-width m-auto flex w-full flex-row justify-between px-4","children":[["$","div",null,{"className":"robotocond500_1477471c-module__3nXAyW__className","children":["¬© ",2025," Steve Teleki. All rights reserved."]}],["$","div",null,{"className":"privacy-footer","children":["$","$L6",null,{"href":"/articles/privacy-policy","children":["$","span",null,{"className":"robotocond500_1477471c-module__3nXAyW__className","children":"Privacy Policy"}]}]}]]}]}],["$","dialog",null,{"id":"search_modal","className":"modal","children":[["$","div",null,{"className":"modal-box w-11/12 max-w-5xl","children":[["$","h3",null,{"className":"pb-6 text-lg font-bold","children":"üß≠¬†Steve on Software Site Search"}],["$","div",null,{"id":"search","className":""}],["$","form",null,{"method":"dialog","children":["$","button",null,{"className":"btn btn-circle btn-ghost btn-sm absolute top-2 right-2","children":"‚úñÔ∏è"}]}]]}],["$","form",null,{"method":"dialog","className":"modal-backdrop","children":["$","button",null,{"children":"close"}]}]]}]]}],["$","$L7",null,{"src":"/js/nav.js"}],["$","$L7",null,{"src":"/js/katex.min.js"}],["$","$L7",null,{"src":"/pagefind/pagefind-ui.js"}],["$","$L7",null,{"src":"/js/pagefind-extra.js"}]]}]]}],{"children":["articles",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","software-engineering-essentials-for-the-working-software-developer","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L8",null,["$","$L9",null,{"children":["$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$Ld",null,{"children":"$Le"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Lf",null,{"children":["$","div",null,{"hidden":true,"children":["$","$10",null,{"fallback":null,"children":"$L11"}]}]}]]}],false]],"m":"$undefined","G":["$12",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/cc0df02d4327479b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],"$L13"]],"s":false,"S":true}
13:["$","link","1",{"rel":"stylesheet","href":"/_next/static/chunks/eb89a7503d7ea580.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
14:T32d4,
<p>The previous article in the series mentioned topics that are rarely if ever discussed in a Computer Science curriculum. The topics in this article are also often skipped. Unfortunately, the knowledge of these software engineering topics is quite important for a working software developer who has software to build and deadlines to meet.</p>
<blockquote class="markdown-note">
  <p>üìù Series on <a href="../starting-in-a-software-development-career/">Starting in a Software Development Career</a></p>
  <ol>
    <li><a href="../office-worker-essentials/">Office Worker Essentials</a></li>
    <li><a href="../your-professional-relationship-with-your-colleagues/">Your Professional Relationship with your Colleagues</a></li>
    <li><a href="../computer-science-essentials-for-the-working-software-developer/">Computer Science Essentials for the Working Software Developer</a></li>
    <li><a href="../software-engineering-essentials-for-the-working-software-developer/">Software Engineering Essentials for the Working Software Developer</a></li>
    <li><a href="../master-your-software-development-tools/">Master Your Software Development Tools</a></li>
  </ol>
</blockquote>
<h2>Structure: Components, Modules, and Subsystems</h2>
<p>The previous part of this series, on Computer Science Essentials, started out with the importance of assigning responsibilities to parts of the software system. But what are those parts? Here is a quick rundown of some terminology to think and reason about the structure of a software system.</p>
<p>This terminology was born out of the need to enable a team to build a reasonable size system, between 100,000 to 500,000 lines of code. Anything beyond that size should be considered <em>‚Äúa system of systems.‚Äù</em> In most programming languages the simplest structural software element is a statement. However, program language statements don‚Äôt stand alone, they are grouped into a <strong>function</strong>. Functions are grouped into a <strong>class</strong>, <strong>struct</strong>, or <strong>namespace</strong> depending on the language that you are using. Classes are grouped into a <strong>component</strong>; components form a <strong>module</strong>; modules form a <strong>subsystem</strong>, and‚Äîat the highest level‚Äîsubsystems form a <strong>system</strong>.</p>
<p>The structural elements above are only a recommendation, a rule of thumb. Once adopted, they imply a certain size and level of abstraction for the team that is using them. You may have to customize this for your situation. Start by establishing a hierarchy of parts and target sizes for each structural element. Here is a recommendation on sizes for you to start with:</p>
<ul>
  <li>Function: 10 lines of code (LOC); range: 2 to 20 LOC</li>
  <li>Class, Struct, or Namespace: 200 LOC; range: 100 LOC to 1 KLOC</li>
  <li>Component: 2,000 LOC (2 KLOC); range 1 to 4 KLOC</li>
  <li>Module: 20 KLOC; range 10 to 40 KLOC</li>
  <li>Subsystem: 50 KLOC; range 20 to 100 KLOC</li>
  <li>System: 250 KLOC; range 100 to 500 KLOC</li>
</ul>
<p>The objective of establishing the nomenclature for the levels of abstraction and sizes is to speed up the conversation about the system. This provides the vocabulary for a team to talk about the system.</p>
<p>Why should you care about structure? What is the meaning of these structural elements? The function and the class are basic abstractions, and they extend the capabilities of the language and its fundamental libraries. The class is an abstract data type that extends the language. Components, modules, and subsystems group related functionality in the problem domain. These elements <em>enable the team to quickly talk about these without getting into the details of their implementation</em> as they are composing parts and building new functionality.</p>
<h2>Revision Control</h2>
<p>When building software some of the paths that you and your team go down on will be in error. You will have to backtrack and restart work from <em>a known good state</em>. This is where a <strong>revision control system</strong> comes to your rescue. In a nutshell: the revision control system allows you‚Äîthe individual developer‚Äîto carry out experiments, recover from mistakes, and‚Äîfor your team‚Äîto share the work with your collaborators: allows you to co-create.</p>
<p>In order to benefit from revision control, you have to make your thinking explicit, and use the revision control system to record your decisions. For example: you just received a defect report that states that the shipping charges are not computed correctly. Next you create a branch, figure out what the problem is, implement the fix, verify that it all works, then merge your branch into the main code line. If your fix fails, then you can restart your work from the point where you started from.</p>
<p>Similarly, create a branch for any new work you are doing on the system. Working in the branch creates a moment of calm and stability while you implement the new feature. The time you work in the branch should be short (a few hours to a couple days at most). Any longer than that and the moment becomes a frozen epoch, and you face a mountain of changes as you try to bring your new feature into a system that has evolved while you were not looking.</p>
<h2>Issue Management</h2>
<p>Issue management is one of the dark knights of software development. It is powerful, but often avoided by developers and their teams. Sometimes, it can feel like a lot of work. Issue management describes a group of related activities.</p>
<p><strong>Define the work.</strong> Issue management is an expression that refers to the management of defects, tasks, features, or any other items of work that are collectively known as issues or work items. Think of an issue as a unit of work. Start by writing down what the work is; this becomes an ‚Äúissue.‚Äù The issue needs to have at least two parts: a name, and a description. Find a good name that helps you quickly recall what this work is when you see the issue name in the list. Once you named the issue, next describe it in sufficient detail that you can recall what that work is even a week or two later. Now that you defined the issue, you can start managing it.</p>
<p><strong>Order and schedule the work.</strong> You must decide in what order and when to do the work. The simplest method is sequencing issues one after another in the order in which they can be completed based on the dependencies between them. You could also schedule the issues on the calendar. Or you can use a more complicated scheduling algorithm that distributes the work across many people and based on constraints and rules. When you start out and your team is relatively small, just stick to the simple stuff.</p>
<p><strong>Perform the work.</strong> Do them in the order that you arranged them and how you scheduled them. This sounds simple. What complicates it is that you need to be mindful that if you see that the defined work no longer makes sense, then you need to change it, and quite possibly you need to define new work. You may need to change the ordering and scheduling, too.</p>
<p><strong>Capture the progress and the completion of the work.</strong> While you work, remember to record your progress. If something takes longer than an hour, set the status of the item to ‚ÄúIn Progress,‚Äù especially if you are working on a team. After all, you don‚Äôt want two people to work on the same stuff. When you are done, mark it complete. It feels good to finish stuff!</p>
<p><strong>Revision control and issue management should work together.</strong> Revision control systems provide a capability to associate the source code you write with an issue from the issue management system. This way you can tie the definition of the work to the work you did as a result of the issue you defined. This capability comes in most useful when you are trying to figure out how something went wrong.</p>
<h2>Design</h2>
<p>The hidden secret of design is that everybody says that they design, but you find almost no artifacts of the design activity, excepting a few confusing whiteboard sketches. Without artifacts, there are only thoughts about design.</p>
<p>Why no artifacts? One reason might be that is easier to talk about it, than to write it down. Design is a high-intensity mental activity. You have to envision how the system will look or work, before actually building it. You have to draw pictures and write some prose that talks about both the system‚Äôs structure and its behavior.</p>
<p>Here are the essentials: you needed to draw ‚Äúboxes,‚Äù ‚Äúlines,‚Äù and write some ‚Äútext.‚Äù The boxes are software parts. The lines are dependencies between those parts, and the text explains their responsibilities.</p>
<p>The beauty and freedom of design is that starting from the top down you can invent the boxes that you need to implement your system. At the top level you divide up all the responsibilities of the system across the parts (the boxes) that you have identified. Draw the lines between them: this tells the story of how those boxes communicate between them.</p>
<p>Next, focus on one of the new ‚Äúboxes‚Äù that you envisioned and the responsibilities that you assigned to it. How will it perform those? Design what‚Äôs inside that box. The method is the same: identify the boxes that are inside it, draw the dependency lines, and assign the responsibilities. No magic. Some part of the system has to do the work, that part must be identified, and the responsibilities assigned.</p>
<p>Whenever you can use ‚Äúboxes‚Äù that already exist, so that you don‚Äôt have to write them. Then your job is to fill in the gaps, write those software parts that you don‚Äôt yet have.</p>
<p>Check your design by ‚Äúrole-playing‚Äù or walking through step-by-step the use case that the system has to support. Do you have a software part identified to perform every bit of the use case? Does the part have sufficient responsibilities to do the work? If yes, move on to implementation.</p>
<h2>Architecture</h2>
<p>Each of the topics discussed so far has several books written about it‚Äîthis is true for architecture as well.</p>
<p>‚ÄúThe software architecture of a system is the set of structures needed to reason about the system, which comprise software elements, relations among them, and properties of both.‚Äù<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref aria-describedby="footnote-label">1</a></sup> The reason you should care about architecture goes back to assigning responsibilities and making fundamental decisions about the system‚Äôs structure and desired behavior. These decisions will ultimately place constraints on the system‚Äôs implementation.</p>
<p>As you are starting out in your career in software development you‚Äôll encounter architecture mostly in negative statements, like: ‚ÄúSomeone needs to make architecture decisions around here.‚Äù and similar. Developers usually decry the lack of architecture, but rarely step up to the plate to actually do something about it. Architecture decisions must balance both technology and business strategy constraints. And this seems to be the stumbling block for most developers. A software system‚Äôs architecture must support the business strategy the organization decided to follow. However, most developers don‚Äôt want to get into business strategy, only technical strategy, therefore not that many people work on real architecture.</p>
<p>The need to focus on and the understanding of business strategy is also what distinguishes architecture from design. A system‚Äôs architecture in some sense also represents the totality of technical decisions based on the business strategy the organization adopted. Once the architecture is in place, then the design decisions that follow implement those decisions.</p>
<p>Just like with design, there is always an architecture for any system, even if no deliberate action was taken to devise one. This is fine sometimes, at least until the business makes some strategic changes. Then everybody wonders why things are the way they are with the system. As with some other activities, the value of architecture often becomes clear only when change happens.</p>
<p>Summing up: when you write software through a series of deliberate actions, you may still not get the software that your users want, but at least you will know how you got there. That gives you a chance to make the necessary corrections to get to what your users want.</p>
<p>Enjoy the journey!</p>
<section data-footnotes class="footnotes">
  <h2 class="sr-only" id="footnote-label">Footnotes</h2>
  <ol>
    <li id="user-content-fn-1">
      <p>Bass, Len, Paul Clements, and Rick Kazman. <em>Software Architecture in Practice</em>. 3rd Ed. Boston: Addison-Wesley, 2013. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">‚Ü©</a></p>
    </li>
  </ol>
</section>
8:["$","main",null,{"data-pagefind-body":true,"className":"flex flex-col","children":[["$","article",null,{"id":"article","className":"content-page grid grid-cols-1 self-center","children":[["$","div",null,{"className":"content-prose","children":["$","h1",null,{"className":"","children":"Software Engineering Essentials for the Working Software Developer"}]}],["$","div",null,{"className":"content-subtitle","children":"Starting in a Software Development Career Series"}],["$","div",null,{"className":"content-date-tags","children":["$","div",null,{"className":"brand-text-accent my-2 text-sm","children":["üóìÔ∏è",["$","span",null,{"className":"date-short px-1","children":"Oct 12, 2016"}],["$","span",null,{"className":"date-long px-1","children":"October 12, 2016"}],[["$","span",null,{"className":"pr-2"}],[["$","span","Design",{"children":["$","span",null,{"className":"inline whitespace-nowrap pr-2 leading-loose","children":["$","$L6",null,{"href":"/tags/design","children":["üè∑Ô∏è ","Design"]}]}]}],["$","span","Development",{"children":["$","span",null,{"className":"inline whitespace-nowrap pr-2 leading-loose","children":["$","$L6",null,{"href":"/tags/development","children":["üè∑Ô∏è ","Development"]}]}]}],["$","span","Process",{"children":["$","span",null,{"className":"inline whitespace-nowrap pr-2 leading-loose","children":["$","$L6",null,{"href":"/tags/process","children":["üè∑Ô∏è ","Process"]}]}]}]]]]}]}],["$","div",null,{"className":"content-reading-time","children":"üìñ 7 minute read"}],["$","div",null,{"className":"content-prose pt-4","dangerouslySetInnerHTML":{"__html":"$14"}}]]}],"$L15"]}]
15:["$","div",null,{"className":"pager","children":[["$","div",null,{"className":"pager-btn pager-btn-left justify-self-start","children":["$","$L6",null,{"href":"/articles/computer-science-essentials-for-the-working-software-developer","children":["$","div",null,{"className":"flex flex-row gap-2","children":[["$","div",null,{"className":"self-center","children":"‚Äπ‚Äπ"}],["$","div",null,{"className":"link-long","children":"Computer Science Essentials for the Working Software Developer"}]]}]}]}],["$","div",null,{"className":"pager-btn pager-btn-right justify-self-end","children":["$","$L6",null,{"href":"/articles/master-your-software-development-tools","children":["$","div",null,{"className":"flex flex-row gap-2","children":[["$","div",null,{"className":"link-long","children":"Master Your Software Development Tools"}],["$","div",null,{"className":"self-center","children":"‚Ä∫‚Ä∫"}]]}]}]}]]}]
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:null
16:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/bf5f4fcdb6d9e318.js"],"IconMark"]
c:{"metadata":[["$","title","0",{"children":"Software Engineering Essentials for the Working Software Developer"}],["$","meta","1",{"name":"description","content":"Starting in a Software Development Career Series"}],["$","meta","2",{"name":"application-name","content":"Steve on Software"}],["$","meta","3",{"name":"author","content":"Steve Teleki"}],["$","meta","4",{"name":"generator","content":"Next.js+Unified.js"}],["$","meta","5",{"name":"keywords","content":"Design,Development,Process"}],["$","meta","6",{"name":"referrer","content":"origin-when-cross-origin"}],["$","meta","7",{"name":"creator","content":"Steve Teleki"}],["$","meta","8",{"name":"publisher","content":"Steve Teleki"}],["$","meta","9",{"name":"robots","content":"index, follow, nocache"}],["$","meta","10",{"name":"category","content":"technology"}],["$","meta","11",{"name":"summary","content":"The previous article in the series mentioned topics that are rarely if ever discussed in a Computer Science curriculum. The topics in this article are also often skipped. Unfortunately, the knowledge of these software engineering topics is quite important for a working software developer who has software to build and deadlines to meet."}],["$","meta","12",{"name":"subtitle","content":"Starting in a Software Development Career Series"}],["$","meta","13",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","14",{"property":"og:title","content":"Software Engineering Essentials for the Working Software Developer"}],["$","meta","15",{"property":"og:description","content":"Starting in a Software Development Career Series"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:title","content":"Software Engineering Essentials for the Working Software Developer"}],["$","meta","18",{"name":"twitter:description","content":"Starting in a Software Development Career Series"}],["$","link","19",{"rel":"icon","href":"/favicon.ico?favicon.b28d3dba.ico","sizes":"256x256","type":"image/x-icon"}],["$","link","20",{"rel":"icon","href":"/icon.png?icon.5872d748.png","sizes":"180x180","type":"image/png"}],["$","link","21",{"rel":"apple-touch-icon","href":"/apple-icon.png?apple-icon.5872d748.png","sizes":"180x180","type":"image/png"}],["$","$L16","22",{}]],"error":null,"digest":"$undefined"}
11:"$c:metadata"
